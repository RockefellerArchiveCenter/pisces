# Generated by Django 2.0.13 on 2019-04-08 22:04

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, choices=[(0, 'Person'), (1, 'Organization'), (2, 'Family'), (3, 'Software')], max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('level', models.CharField(blank=True, choices=[('class', 'Class'), ('collection', 'Collection'), ('file', 'File'), ('fonds', 'Fonds'), ('item', 'Item'), ('otherlevel', 'Other Level'), ('recordgrp', 'Record Group'), ('series', 'Series'), ('subfonds', 'Sub-Fonds'), ('subgrp', 'Sub-Group'), ('subseries', 'Sub-Series')], max_length=100, null=True)),
                ('agents', models.ManyToManyField(related_name='agent_collections', to='transformer.Agent')),
                ('creators', models.ManyToManyField(related_name='creator_collections', to='transformer.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('expression', models.CharField(max_length=255)),
                ('label', models.CharField(choices=[('record_keeping', 'Record Keeping'), ('broadcast', 'Broadcast'), ('copyright', 'Copyright'), ('creation', 'Creation'), ('deaccession', 'Deaccession'), ('agent_relation', 'Agent Relation'), ('digitized', 'Digitized'), ('existence', 'Existence'), ('event', 'Event'), ('issued', 'Issued'), ('modified', 'Modified'), ('publication', 'Publication'), ('usage', 'Usage'), ('other', 'Other')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Extent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('type', models.CharField(choices=[('cassettes', 'Cassettes'), ('cubic_feet', 'Cubic Feet'), ('files', 'Files'), ('gigabytes', 'Gigabytes'), ('leaves', 'Leaves'), ('linear_feet', 'Linear Feet'), ('megabytes', 'Megabytes'), ('photographic_prints', 'Photographic Prints'), ('photographic_slides', 'Photographic Slides'), ('reels', 'Reels'), ('sheets', 'Sheets'), ('terabytes', 'Terabytes'), ('volumes', 'Volumes')], max_length=100)),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Collection')),
            ],
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[(0, 'Aurora'), (1, 'Archivematica'), (2, 'Fedora'), (3, 'ArchivesSpace')], max_length=100)),
                ('identifier', models.CharField(max_length=255)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Agent')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Collection')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.CharField(max_length=255)),
                ('identifier', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('accessrestrict', 'Conditions Governing Access'), ('accruals', 'Accruals'), ('acqinfo', 'Immediate Source of Acquisition'), ('altformavail', 'Existence and Location of Copies'), ('appraisal', 'Appraisal'), ('arrangement', 'Arrangement'), ('bibliography', 'Bibliography'), ('bioghist', 'Biographical / Historical'), ('custodhist', 'Custodial History'), ('fileplan', 'File Plan'), ('index', 'Index'), ('odd', 'General'), ('otherfindaid', 'Other Finding Aids'), ('originalsloc', 'Existence and Location of Originals'), ('phystech', 'Physical Characteristics and Technical Requirements'), ('prefercite', 'Preferred Citation'), ('processinfo', 'Processing Information'), ('relatedmaterial', 'Related Archival Materials'), ('scopecontent', 'Scope and Contents'), ('separatedmaterial', 'Separated Materials'), ('userestrict', 'Conditions Governing Use'), ('dimensions', 'Dimensions'), ('legalstatus', 'Legal Status'), ('summary', 'Summary'), ('edition', 'Edition'), ('extent', 'Extent'), ('note', 'General Note'), ('inscription', 'Inscription'), ('langmaterial', 'Language of Materials'), ('physdesc', 'Physical Description'), ('relatedmaterial', 'Related Materials'), ('abstract', 'Abstract'), ('physloc', 'Physical Location'), ('materialspec', 'Materials Specific Details'), ('physfacet', 'Physical Facet'), ('rights_statement', 'Rights')], max_length=100)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Agent')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Collection')),
            ],
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agents', models.ManyToManyField(related_name='agent_objects', to='transformer.Agent')),
                ('languages', models.ManyToManyField(related_name='language_objects', to='transformer.Language')),
                ('parents', models.ManyToManyField(to='transformer.Collection')),
            ],
        ),
        migrations.CreateModel(
            name='RightsGranted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('act', models.CharField(choices=[('publish', 'Publish'), ('disseminate', 'Disseminate'), ('replicate', 'Replicate'), ('migrate', 'Migrate'), ('modify', 'Modify'), ('use', 'Use'), ('delete', 'Delete')], max_length=100)),
                ('dateStart', models.DateTimeField()),
                ('dateEnd', models.DateTimeField(blank=True, null=True)),
                ('restriction', models.CharField(choices=[('allow', 'Allow'), ('disallow', 'Disallow'), ('conditional', 'Conditional')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='RightsStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('determinationDate', models.DateTimeField()),
                ('rightsType', models.CharField(choices=[('copyright', 'Copyright'), ('statute', 'Statute'), ('license', 'License'), ('other', 'Other')], max_length=255)),
                ('dateStart', models.DateTimeField()),
                ('dateEnd', models.DateTimeField(blank=True, null=True)),
                ('copyrightStatus', models.CharField(blank=True, choices=[('copyrighted', 'copyrighted'), ('public domain', 'public domain'), ('unknown', 'unknown')], max_length=255, null=True)),
                ('otherBasis', models.CharField(blank=True, max_length=255, null=True)),
                ('jurisdiction', models.CharField(blank=True, max_length=255, null=True)),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Collection')),
                ('object', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Object')),
            ],
        ),
        migrations.CreateModel(
            name='SourceData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[(0, 'Aurora'), (1, 'Archivematica'), (2, 'Fedora'), (4, 'ArchivesSpace')], max_length=100)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Agent')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Collection')),
                ('object', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Object')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, choices=[('cultural_context', 'Cultural context'), ('function', 'Function'), ('geographic', 'Geographic'), ('genre_form', 'Genre / Form'), ('occupation', 'Occupation'), ('style_period', 'Style / Period'), ('technique', 'Technique'), ('temporal', 'Temporal'), ('topical', 'Topical')], max_length=255, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='sourcedata',
            name='term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Term'),
        ),
        migrations.AddField(
            model_name='rightsgranted',
            name='rights_statement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transformer.RightsStatement'),
        ),
        migrations.AddField(
            model_name='object',
            name='terms',
            field=models.ManyToManyField(related_name='term_objects', to='transformer.Term'),
        ),
        migrations.AddField(
            model_name='note',
            name='object',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Object'),
        ),
        migrations.AddField(
            model_name='note',
            name='rights_granted',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.RightsGranted'),
        ),
        migrations.AddField(
            model_name='note',
            name='rights_statement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.RightsStatement'),
        ),
        migrations.AddField(
            model_name='note',
            name='term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Term'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='object',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Object'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Term'),
        ),
        migrations.AddField(
            model_name='extent',
            name='object',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transformer.Object'),
        ),
        migrations.AddField(
            model_name='collection',
            name='languages',
            field=models.ManyToManyField(related_name='language_collections', to='transformer.Language'),
        ),
        migrations.AddField(
            model_name='collection',
            name='parents',
            field=models.ManyToManyField(related_name='_collection_parents_+', to='transformer.Collection'),
        ),
        migrations.AddField(
            model_name='collection',
            name='terms',
            field=models.ManyToManyField(related_name='term_collections', to='transformer.Term'),
        ),
    ]
